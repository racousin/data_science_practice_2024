name: Enforce and Evaluate

on:
  push:
    branches:
      - main

jobs:
  check-and-update:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    environment: main
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 2

    # Log the event name and event path for debugging purposes
    - name: Log Event Name and Path
      run: |
        echo "Event Name: ${{ github.event_name }}"
        echo "Event Path: $GITHUB_EVENT_PATH"

    # Retrieve the PR author from the event payload and log the output
    - name: Set Environment Variables
      if: github.event_name == 'push'
      run: |
        if [ -f $GITHUB_EVENT_PATH ]; then
          echo "GITHUB_EVENT_PATH exists. Extracting PR author."
          PR_AUTHOR=$(jq -r .pull_request.user.login < $GITHUB_EVENT_PATH)
          echo "Extracted PR Author: $PR_AUTHOR"
          if [ "$PR_AUTHOR" != "null" ]; then
            echo "AUTHOR=$PR_AUTHOR" >> $GITHUB_ENV
            echo "Author is set to PR Author: $PR_AUTHOR"
          else
            # Fallback to git log if PR_AUTHOR is null
            AUTHOR=$(git log -2 --pretty=format:'%an' | tail -n 1)
            echo "AUTHOR=$AUTHOR" >> $GITHUB_ENV
            echo "Author is set to previous commit author: $AUTHOR"
          fi
        else
          # Fallback to git log if no GITHUB_EVENT_PATH
          AUTHOR=$(git log -2 --pretty=format:'%an' | tail -n 1)
          echo "AUTHOR=$AUTHOR" >> $GITHUB_ENV
          echo "GITHUB_EVENT_PATH not found. Author is set to previous commit author: $AUTHOR"
        fi
        echo "GITHUB_REPOSITORY_NAME=$(echo ${{ github.repository }} | cut -d '/' -f2)" >> $GITHUB_ENV
        echo "Repository Name: ${{ env.GITHUB_REPOSITORY_NAME }}"

    - name: Setup AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Set Script Permissions
      run: chmod +x ./scripts/* ./tests/*/exercise*.sh ./tests/run_tests_and_update_results.sh

    - name: Check and Add User to Students List
      run: ./scripts/check-and-add-user.sh ${{ env.AUTHOR }} ${{ env.GITHUB_REPOSITORY_NAME }} ${{ secrets.AWS_ACCESS_KEY_ID }} ${{ secrets.AWS_SECRET_ACCESS_KEY }} ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Determine Changed Modules
      run: |
        CHANGED_MODULES=$(./scripts/check-changed-modules.sh ${{ env.AUTHOR }} "false")
        echo "CHANGED_MODULES=$CHANGED_MODULES" >> $GITHUB_ENV
        echo "Changed modules: $CHANGED_MODULES"

    - name: Run Tests and Update Results
      run: |
        if [[ -z "${{ env.CHANGED_MODULES }}" ]]; then
          echo "No MODULEs changed. Skipping tests."
        else
          echo "Running tests for changed modules: ${{ env.CHANGED_MODULES }}"
          ./tests/run_tests_and_update_results.sh ${{ env.AUTHOR }} ${{ secrets.AWS_ACCESS_KEY_ID }} ${{ secrets.AWS_SECRET_ACCESS_KEY }} ${{ secrets.AWS_DEFAULT_REGION }} "${{ env.CHANGED_MODULES }}" ${{ env.GITHUB_REPOSITORY_NAME }}
          ./scripts/compute_progress_percentage.sh ${{ env.AUTHOR }} ${{ env.GITHUB_REPOSITORY_NAME }} ${{ secrets.AWS_ACCESS_KEY_ID }} ${{ secrets.AWS_SECRET_ACCESS_KEY }} ${{ secrets.AWS_DEFAULT_REGION }}
        fi
